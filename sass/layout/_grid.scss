//we won't be defining specific rows as all rows are specified not by the row name
//as they share the same .row class, but by the column classes nested within them
//So the .row class is (FOR ALL ROWS)
.row {
  max-width: $grid-width; /*1140px*/
  margin: 0 auto; /*trick to center one block element inside another block element*/

  //Setting up the gutter between the rows
  &:not(:last-child) {
    margin-bottom: $gutter-horizontal;

    //Media query
    @include respond(tab-port) {
      margin-bottom: $gutter-horizontal-small;
    }
  }
  //Media query (making the elements not spread out over all avaliable space
  // when max-width is not reached, by making the max width smaller
  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  //Insert clearfix before our columns
  @include clearfix; //.row::after{clearfix-content}

  //ATTRIBUTE SELECTOR sellects all columns, floats them and
  //adds a right margin(gutter) to all but the last column
  [class^="column-"] {
    float: left;

    //Setting up the gutter between the columns
    //gives a margin-right to all columns except the last(child)one
    &:not(:last-child) {
      margin-right: $gutter-vertical;

      //Media query
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-horizontal-small;
      }
    }

    //MediaQuery
    @include respond(tab-port) {
      width: 100% !important; //column becomes as wide as it's parent row(turns into row)
      //has to be important to make sure the more specific
      //column width rules that follow don't overwrite this media query
    }
  }
  //Setting up the columns with the following algorithm
  // (100%rowWidth -(numberOfGutters*gutterWidth))/NumberOfColumns;
  //Note that {numberOfGutters = NumberOfColumns-1;}
  //#####FOR ALL COLUMNS THAT ARE A HALF 1/2
  .column-1-of-2 {
    width: calc((100% - #{$gutter-vertical}) / 2);
  }
  //#####FOR ALL COLUMNS THAT ARE A THRID 1/3 lenght
  .column-1-of-3 {
    width: calc((100% - 2 * #{$gutter-vertical}) / 3);
  }

  //###FOR ALL COLUMNS THAT ARE 2/3 TWO THIRDs lenght
  .column-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-vertical}) / 3) + #{$gutter-vertical}); //1third times two
  }

  //###FOR ALL COLUMNS THAT ARE 1/4 quarters length
  .column-1-of-4 {
    width: calc((100% - 3 *#{$gutter-vertical}) / 4);
  }
  //###FOR ALL COLUMNS THAT ARE TWO QUARTERS LENGTH 2/4
  .column-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-vertical}) / 4) + #{$gutter-vertical}); //1third times two
  }

  //###FOR ALL COLUMNS THAT ARE Three quarters length 3/4

  .column-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-vertical}) / 4) + 2 *#{$gutter-vertical}); //1third times two
  }
}
